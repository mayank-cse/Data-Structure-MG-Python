13. Roman to Integer
Easy
8.3K
483
Companies
Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.

Symbol       Value
I             1
V             5
X             10
L             50
C             100
D             500
M             1000
For example, 2 is written as II in Roman numeral, just two ones added together. 12 is written as XII, which is simply X + II. The number 27 is written as XXVII, which is XX + V + II.

Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not IIII. Instead, the number four is written as IV. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as IX. There are six instances where subtraction is used:

I can be placed before V (5) and X (10) to make 4 and 9. 
X can be placed before L (50) and C (100) to make 40 and 90. 
C can be placed before D (500) and M (1000) to make 400 and 900.
Given a roman numeral, convert it to an integer.

 

Example 1:

Input: s = "III"
Output: 3
Explanation: III = 3.
Example 2:

Input: s = "LVIII"
Output: 58
Explanation: L = 50, V= 5, III = 3.
Example 3:

Input: s = "MCMXCIV"
Output: 1994
Explanation: M = 1000, CM = 900, XC = 90 and IV = 4.
 

Constraints:

1 <= s.length <= 15
s contains only the characters ('I', 'V', 'X', 'L', 'C', 'D', 'M').
It is guaranteed that s is a valid roman numeral in the range [1, 3999].
Accepted
2.3M
Submissions
3.9M
****************************************
Step 1 - Traverse the string
Step 2 - check if the next adjascent element is equal, smaller or greater
Step 3 - Equal - increment "j" (index of next adjascent)
         smaller - find the sum till now and add in final sum
         greater - find the sum of the substring and subtract

*****************************************
class Solution:
    def conv(self, s) -> int:
        print(s)
        i = 0
        sum = 0
        while(i<len(s)):
            if s[i]=="I":
                sum += 1
            elif s[i]=="V":
                sum += 5
            elif s[i] =="X":
                sum+=10
            elif s[i]=="L":
                sum+=50
            elif s[i]=="C":
                sum+=100
            elif s[i]=="D":
                sum+=500
            elif s[i]=="M":
                sum+=1000
            i+=1

        return sum
    def big(self, s)->int:
        l = ["I", "V", "X", "L", "C", "D", "M"]
        # print(s)
        for i in range(0, len(l)):
            if l[i]==s:
                return i
    def romanToInt(self, s: str) -> int:
        i = 0
        j = i+1
        n = len(s)
        sum = 0
        flag = 0
        
        while(i<len(s)):
            if(j == n):
                flag = 1
                break
                
            print(s[i],s[j])
            print(self.big(s[i]),self.big(s[j]))
            # tempSum = 0
            if self.big(s[j])==self.big(s[i]):
                if(j == n):
                    flag = 1
                    break
                j+=1
                continue
            if self.big(s[j])>self.big(s[i]):
                tempSum = self.conv(s[i:j])
                print(tempSum)
                sum -=tempSum
                sum += self.conv(s[j])
                print(sum)
                j+=1

                i = j
                tempSum = 0
                continue
            else:
                # print(i,j)
                sum += self.conv(s[i:j])
                i = j
                print(sum)
        if(flag == 1):
            # print(s[i:j+1])
            sum += self.conv(s[i:j+1])
            # print(sum)
            return sum
        return sum
