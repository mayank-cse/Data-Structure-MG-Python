Question
Paramenters:

array of currency conversion rates. E.g. ['USD', 'GBP', 0.77] which means 1 USD is equal to 0.77 GBP
an array containing a 'from' currency and a 'to' currency
Given the above parameters, find the conversion rate that maps to the 'from' currency to the 'to' currency.
Your return value should be a number.

Example:
You are given the following parameters:

Rates: ['USD', 'JPY', 110] ['US', 'AUD', 1.45] ['JPY', 'GBP', 0.0070]
To/From currency ['GBP', 'AUD']
Find the rate for the 'To/From' curency. In this case, the correct result is 1.89.

****************
https://leetcode.com/problems/evaluate-division/
****************
  class Solution:
    def calcEquation(self, equations: List[List[str]], values: List[float], queries: List[List[str]]) -> List[float]:
        mp = {}
        adj = {}
        for i in range(len(equations)):
            if equations[i][0] not in adj:
                adj[equations[i][0]] = []
            if equations[i][1] not in adj:
                adj[equations[i][1]] = []
            adj[equations[i][0]] += [(equations[i][1], values[i])]
            adj[equations[i][1]] += [(equations[i][0], 1/values[i])]
        # print(adj)
        def dfs(node, target, visited):
            print(node, target)
            if node == target :
                return 1
            if node in visited:
                return float('-inf')
            ans = float('-inf')
            print(adj[node])
            for ele, val in adj[node]:
                visited[ele] = 1
                ans = max(ans, dfs(ele, target, visited)*val)
                visited[ele] = 0
            return ans
        ans = []
        for start, end in queries:
            visited = {}
            temp = dfs(start, end, visited)
            ans.append(temp if temp!= float('-inf') else -1)
        return ans
