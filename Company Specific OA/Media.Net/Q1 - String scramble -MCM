https://www.geeksforgeeks.org/check-if-a-string-is-a-scrambled-form-of-another-string/
https://leetcode.com/problems/scramble-string/description/
*********************************
class Solution:
    def __init__(self):
        self.dp = {}
    def isScramble(self, s1: str, s2: str) -> bool:
        if len(s1)!=len(s2):
            return False
        if Counter(s1) != Counter(s2):
            return False
        if s1 == s2:
            return True
        if (s1,s2) in self.dp:
            return self.dp[(s1,s2)]
        for k in range(1, len(s1)):
            if (self.isScramble(s1[k:], s2[k:]) and self.isScramble(s1[:k],s2[:k])) or (self.isScramble(s1[k:],s2[:-k]) and self.isScramble(s1[:k], s2[-k:])):
                self.dp[(s1,s2)] = True
                return True
        self.dp[(s1,s2)] = False
        return False
        
