You are given the heads of two sorted linked lists list1 and list2.
Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.
Return the head of the merged linked list.

Example 1:
Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]

Example 2:
Input: list1 = [], list2 = []
Output: []

Example 3:
Input: list1 = [], list2 = [0]
Output: [0]

Constraints:
The number of nodes in both lists is in the range [0, 50].
-100 <= Node.val <= 100
Both list1 and list2 are sorted in non-decreasing order.
**********************************************
class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        head = dummy = ListNode()
        curr1 = list1
        curr2 = list2
        while curr2 and curr1:
            if curr1.val <= curr2.val:
                newNode = ListNode(curr1.val)
                curr1 = curr1.next
            else:
                newNode = ListNode(curr2.val)
                curr2 = curr2.next
            dummy.next,dummy = newNode,newNode
        if curr1:
            dummy.next = curr1
        elif curr2:
            dummy.next = curr2

        return head.next
*****************************************
class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        # head = dummy = list1 if list1.val<list2.val else list2
        
        # if list1.val<list2.val:
        #     head = dummy = list1
        #     list1 = list1.next
        # else:
        #     head = dummy = list2
        #     list2 = list2.next
        head = dummy = ListNode()
        while list1 and list2:
            if list1.val<=list2.val:
                dummy.next = list1
                list1 = list1.next
            else:
                dummy.next = list2
                list2 = list2.next
            dummy = dummy.next
        if list1:
            dummy.next = list1
        else:
            dummy.next = list2
****************************************
class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        # head = dummy = list1 if list1.val<list2.val else list2
        # head = dummy = ListNode()
        if list1 == None: return list2
        if list2 == None: return list1
        if list1.val<list2.val:
            head = dummy = list1
            list1 = list1.next
        else:
            head = dummy = list2
            list2 = list2.next
        # dummy = dummy.next
        while list1 and list2:
            if list1.val<=list2.val:
                dummy.next = list1
                list1 = list1.next
            else:
                dummy.next = list2
                list2 = list2.next
            dummy = dummy.next
        if list1:
            dummy.next = list1
        else:
            dummy.next = list2
        return head
            
