Backtracking - 
class Solution:
    def letterCombinations(self, digits: str) -> List[str]:
        mp = {'2':"abc", '3':'def','4':'ghi', '5':'jkl', '6':'mno', '7':'pqrs', '8':'tuv', '9':'wxyz'}
        output = []
        def helper(ind, comb):
            if ind == len(digits):
                if len(comb)>0:
                    output.append(comb)
                return 
            for char in mp[digits[ind]]:
                helper(ind+1, comb + char)
        helper(0, "")
        return output
