class Solution:
    def buddyStrings(self, s: str, goal: str) -> bool:
        if len(s)!=len(goal):
            return False
        count = 0
        for i in range(len(s)):
            if s[i]!=goal[i]:
                count+=1
            if count>2:
                return False
        ds = Counter(s)
        dg = Counter(goal)
        if ds != dg:
            return False
        dup = 0
        for ele in ds:
            if ds[ele]>1:
                dup = 1
                break

        if count == 0 and dup!=1:
            #check duplicates
            return False
        return True
**********************************************
class Solution:
    def buddyStrings(self, s: str, goal: str) -> bool:
        if len(s) != len(goal):
            return False

        # either there can be exactly two identical differences
        # OR there are no differences but there is a repeating character in s

        diff = [[x, y] for x, y in zip(s, goal) if x != y]
        if len(diff) > 2 or len(diff) == 1:
            return False

        if len(diff) == 0:
            return len(set(s)) != len(s)
        print(diff)
        return diff[0][0] == diff[1][1] and diff[0][1] == diff[1][0]
        
