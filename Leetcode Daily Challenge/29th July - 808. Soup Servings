class Solution:
    def soupServings(self, n: int) -> float:
        dp = {}
        mod = 1e-5
        if n > 4800:
            return 1
        dp = {}
        def helper(A, B):
            if A <=0 and B<=0:
                return 1/2
            if A <= 0:
                return 1
            if B<=0:
                return 0
            if (A,B) in dp:
                return dp[(A,B)]
            ans = 0
            ans += helper(A-100, B)*0.25
            ans += helper(A-75, B-25)*0.25
            ans += helper(A-50, B-50)*0.25
            ans += helper(A-25, B-75)*0.25
            dp[(A,B)] = ans
            return (ans)
        return helper(n,n) 
