from os import *
from sys import *
from collections import *
from math import *

## Read input as specified in the question.
t = int(input())
for _ in range(t):
    n = int(input())
    weights = list(map(int, input().split()))
    values = list(map(int, input().split()))
    W = int(input())
    ## Print output as specified in the question.
    dp = [[-1 for _ in range(W+1)] for _ in range(n)]
    def helper(ind, W):
        if ind == n or W==0:
            return 0
        if dp[ind][W] != -1:
            return dp[ind][W]
        take = 0
        if weights[ind]<=W:
            take = values[ind]+helper(ind+1,W-weights[ind])
        notTake = helper(ind+1, W)
        dp[ind][W] = max(take,notTake)
        return max(take,notTake)
    print(helper(0,W))
