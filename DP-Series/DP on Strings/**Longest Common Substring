https://www.codingninjas.com/studio/problems/longest-common-substring_1235207?source=youtube&campaign=striver_dp_videos&utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_dp_videos&leftPanelTab=0
****************************
from os import *
from sys import *
from collections import *
from math import *

def lcs(str1, str2):
    # Write your code here.
    lenStr1 = len(str1)
    lenStr2 = len(str2)
    def helper(ind1,ind2):
        if ind2==lenStr2:
            return 0
        take = 0
        temp = ind1
        temp2 = ind2
        while temp<lenStr1 and temp2<lenStr2 and str1[temp]==str2[temp2]:
            take +=1
            temp+=1
            temp2+=1

        notTake = 0+helper(ind1,ind2+1)
        return max(take, notTake)
    ans = 0
    for ind in range(lenStr1):
        ans = max(ans, helper(ind,0))
    return ans
    pass
O(N*3)
****************************************
from os import *
from sys import *
from collections import *
from math import *

def lcs(str1, str2):
    # Write your code here.
    ans = 0
    dp = [[0 for _ in range(len(str2)+1)] for _ in range(len(str1)+1)]
    for ind1 in range(1,len(str1)+1):
        for ind2 in range(1,len(str2)+1):
            
            if str1[ind1-1] == str2[ind2-1]:
                val = 1 + dp[ind1 - 1][ind2 - 1]
                dp[ind1][ind2] = val
                ans = max(ans, val)
            else:
                dp[ind1][ind2] = 0
            
    return ans
    pass
O(N^2)
