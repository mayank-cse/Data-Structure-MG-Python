Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.
We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.
You must solve this problem without using the library's sort function.

Example 1:
Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]

Example 2:
Input: nums = [2,0,1]
Output: [0,1,2]

Constraints:
n == nums.length
1 <= n <= 300
nums[i] is either 0, 1, or 2.
 
Follow up: Could you come up with a one-pass algorithm using only constant extra space?
****************************************
class Solution:
    def sortColors(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        count_0 = 0
        count_1 = 0
        count_2 = 0
        for i in nums:
            if i == 0:
                count_0+=1
            if i == 1:
                count_1+=1
            if i == 2:
                count_2+=1
        for i in range(count_0):
            nums[i] = 0
        for i in range(count_0, count_0+count_1):
            nums[i] = 1
        for i in range(count_0+count_1,count_0+count_1+count_2):
            nums[i] = 2
            
****************************************
class Solution:
    def sortColors(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        low = 0
        mid = 0
        high = len(nums)-1
        i = 0
        while i<=high and low<=mid:
            if(nums[i]==0):
                if(low == i):
                    i+=1
                    if(mid == low):
                        mid+=1
                    low +=1
                    continue
                nums[i], nums[low] = nums[low], nums[i]
                low +=1
            if(nums[i]==1):
                if i== mid:
                    i+=1
                    mid+=1
                    continue
                nums[i], nums[mid] = nums[mid], nums[i]
                mid+=1
            if(nums[i]==2):
                if i==high:
                    i+=1
                    high-=1
                    continue
                #swap with high
                nums[i], nums[high] = nums[high], nums[i]
                high-=1
            print(nums)
