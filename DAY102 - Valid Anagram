Given two strings s and t, return true if t is an anagram of s, and false otherwise.
An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.

Example 1:
Input: s = "anagram", t = "nagaram"
Output: true

Example 2:
Input: s = "rat", t = "car"
Output: false

Constraints:
1 <= s.length, t.length <= 5 * 104
s and t consist of lowercase English letters.

Follow up: What if the inputs contain Unicode characters? How would you adapt your solution to such a case?
**********************************
class Solution:
    def isAnagram(self, s: str, t: str) -> bool:
        freq = {}
        for ele in s:
            if ele not in freq:
                freq[ele]=1
            else:
                freq[ele]+=1
        print(freq)
        for ele in t:
            if ele not in freq:
                return False
            else:
                freq[ele]-=1
        print(freq)
        for key, value in freq.items():
            if value>0 or value<0:
                return False
        return True
*********************************
class Solution:
    def isAnagram(self, s: str, t: str) -> bool:
        if len(s)!=len(t): return False
        return Counter(s)==Counter(t)
