# if all others are distinct till n
class Solution:
    def findDuplicate(self, nums: List[int]) -> int:
        sumNums = sum(nums)
        # sum of first n numbers = n*(n+1)//2
        n = len(nums)-1
        sumN = (n * (n+1))//2
        return sumNums-sumN
        
****************************************
class Solution:
    def findDuplicate(self, nums: List[int]) -> int:
        slow = nums[0]
        fast = nums[0]
        while True:
            slow = nums[slow]
            fast = nums[nums[fast]]
            if slow == fast:
                break
        slow = nums[0]
        while fast != slow:
            slow = nums[slow]
            fast = nums[fast]
        
        return slow
