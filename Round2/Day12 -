Given an array nums of size n, return the majority element.

The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.

Example 1:
Input: nums = [3,2,3]
Output: 3

Example 2:
Input: nums = [2,2,1,1,1,2,2]
Output: 2
 
Constraints:
n == nums.length
1 <= n <= 5 * 104
-109 <= nums[i] <= 109

********************************
class Solution:
    def majorityElement(self, nums: List[int]) -> int:
        count = 0
        ele = 0
        for char in nums:
            if count == 0:
                ele = char
                count +=1
                continue
            else:
                if ele == char:
                    count +=1 
                else:
                    count-=1
        if nums.count(ele)>len(nums)//2:
            return ele
        else:
            return -1
