# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        dummy = ListNode()
        curr = dummy
        curr1, curr2 = l1,l2
        carry = 0
        while curr1 and curr2:
            temp=curr1.val+curr2.val+carry
            curr.next = ListNode(temp%10)
            curr = curr.next
            curr1 = curr1.next
            curr2 = curr2.next
            
            if temp > 9:
                carry = 1
            else:
                carry = 0

        while curr1:
            temp = curr1.val + carry
            curr.next = ListNode(temp%10)
            curr = curr.next
            curr1 = curr1.next
            if temp > 9:
                carry = 1
            else:
                carry = 0
        
        while curr2:
            temp = curr2.val + carry
            curr.next = ListNode(temp%10)
            curr = curr.next
            
            curr2 = curr2.next
            if temp > 9:
                carry = 1
            else:
                carry = 0
        if carry==1:
            curr.next = ListNode(carry)
        return dummy.next
