# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> Optional[ListNode]:
        curr1, curr2 = headA, headB
        trig = 0
        while True:
            # print(curr1.val, curr2.val)
            if curr1 == curr2:
                return curr1
            if curr1 == headB:
                trig+=1
                if trig == 2:
                    return None
            
            if curr1 == None or curr2 == None:
                if curr1 == None:
                    curr1 = headB
                    curr2 = curr2.next
                if curr2 == None:
                    curr2 = headA
                    curr1 = curr1.next
            else:
                curr1 = curr1.next
                curr2 = curr2.next
                        
            
        
