Write a function to find the longest common prefix string amongst an array of strings.
If there is no common prefix, return an empty string "".

Example 1:
Input: strs = ["flower","flow","flight"]
Output: "fl"

Example 2:
Input: strs = ["dog","racecar","car"]
Output: ""
Explanation: There is no common prefix among the input strings.

Constraints:
1 <= strs.length <= 200
0 <= strs[i].length <= 200
strs[i] consists of only lowercase English letters.
*******************************************
class Solution:
    def longestCommonPrefix(self, strs: List[str]) -> str:
        ans = strs[0]
        for i in range(1,len(strs)):
            ans = ans[:min(len(strs[0]), len(strs[i]))]
            for j in range(min(len(strs[0]), len(strs[i]))):
                print(strs[0][j],strs[i][j], ans)
                if strs[0][j] != strs[i][j]:
                    if j-1>=0:
                        ans = ans[:j]
                    else:
                        return ""
        return ans
*******************************************
class Solution:
    def longestCommonPrefix(self, strs: List[str]) -> str:
        mini = inf
        for arr in strs:
            mini = min(mini, len(arr))
        
        ans = strs[0]
        for i in range(len(strs)):
            for j in range(mini):
                if ans[j] != strs[i][j]:
                    mini = j
                    break

        return ans[:mini]
******************************************
class Solution:
    def longestCommonPrefix(self, strs: List[str]) -> str:
        if len(strs) == 0 or len(strs)==1: return strs[0]
        ans = -1
        for i in range(len(strs[0])):
            for j in range(1,len(strs)):
                if i>=len(strs[j]) or strs[0][i]!=strs[j][i]:
                    return strs[0][:i]
        return strs[0]
